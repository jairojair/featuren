{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Featuren A simple application for managing your features in production. Introduction # Feature flags/toggles/controls are a software development best practice of gating functionality, used by companies like Google and Facebook. Functionality can be deployed \u201coff\u201d, then turned on via the feature flag, separate from deployment. The main goal for this project is create a simple and open source application for managing your features in production.","title":"Introduction"},{"location":"#introduction","text":"Feature flags/toggles/controls are a software development best practice of gating functionality, used by companies like Google and Facebook. Functionality can be deployed \u201coff\u201d, then turned on via the feature flag, separate from deployment. The main goal for this project is create a simple and open source application for managing your features in production.","title":"Introduction"},{"location":"started/","text":"Install from scratch! # Firstly, install requirements down below: Docker Git Git clone # 1 git clone https://github.com/jairojair/featuren.git Setup # 1 2 3 4 cd featuren docker-compose build docker-compose run app make migrate Add new user # 1 docker-compose run app make add-user Run # 1 docker-compose up Access: http://0.0.0.0:8000 and your browser will show the message below: 1 2 3 4 { \"message\" : \"Welcome to Featuren!\" , \"documentation\" : \"https://jairojair.github.io/featuren/\" }","title":"Quickstart"},{"location":"started/#install-from-scratch","text":"Firstly, install requirements down below: Docker Git","title":"Install from scratch!"},{"location":"started/#git-clone","text":"1 git clone https://github.com/jairojair/featuren.git","title":"Git clone"},{"location":"started/#setup","text":"1 2 3 4 cd featuren docker-compose build docker-compose run app make migrate","title":"Setup"},{"location":"started/#add-new-user","text":"1 docker-compose run app make add-user","title":"Add new user"},{"location":"started/#run","text":"1 docker-compose up Access: http://0.0.0.0:8000 and your browser will show the message below: 1 2 3 4 { \"message\" : \"Welcome to Featuren!\" , \"documentation\" : \"https://jairojair.github.io/featuren/\" }","title":"Run"},{"location":"tutorial/","text":"The Featuren is a software for you managing your features in production. In this tutorial you\u2019ll learn how can get and update the features using only service token. # Setup # Login Create a service Create a feature # Use Featuren # Each service has a unique token. Use this token to get the feature information. Get feature # Information Use the service token you created before to access the resource. However, you only will be access to get and update feature information. If you want full access to feature resource, see more details here . GET /features/{id} Request # HTTP 1 2 GET /features/search-button HTTP / 1.1 Authorization : Token _Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg Curl 1 2 curl \"http://0.0.0.0:8000/features/search-button\" \\ -H 'Authorization: Token _Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg' Python 1 2 3 4 5 6 7 8 9 10 11 12 # Install the Python Requests library: # `pip install requests` import requests host = \"http://0.0.0.0:8000\" token = \"_Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg\" headers = { \"Authorization\" : f \"Token {token}\" } response = requests . get ( f \"{host}/features/search-button\" , headers = headers ) print ( response . json ()) Response # 200 1 { \"id\" : \"search-button\" , \"version\" : \"1.0.0\" } 401 1 { \"message\" : \"Unauthorized\" } 403 1 { \"message\" : \"Access denied to resource\" } 404 1 { \"message\" : \"Feature not found\" } Update feature # Tip For more details about feature attributes see here. PUT /features/{id} Request # HTTP 1 2 3 4 5 6 PUT /features/search-button HTTP / 1.1 Authorization : Token _Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg Content-Type : application/json; charset=utf-8 Host : 0.0.0.0:8000 { \"enabled\" : true , \"deny\" : false , \"version\" : \"1.0.0\" ] } Curl 1 2 3 4 5 6 7 8 curl -X \"PUT\" \"http://0.0.0.0:8000/features/search-button\" \\ -H 'Authorization: Token _Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"enabled\": true, \"deny\": false, \"version\": \"1.0.0\" }' Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Install the Python Requests library: # `pip install requests` import requests host = \"http://0.0.0.0:8000\" token = \"_Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg\" feature = { \"enabled\" : True , \"deny\" : False , \"version\" : \"1.0.1\" } headers = { \"Authorization\" : f \"Token {token}\" } response = requests . put ( f \"{host}/features/search-button\" , feature , headers = headers ) print ( response . json ()) Response # 200 1 { \"message\" : \"Feature update successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 403 1 { \"message\" : \"Access denied to resource.\" } 404 1 { \"message\" : \"Feature not found.\" } You finished! Congratulations! If you have any questions or found a bug, please open an issue here","title":"Tutorial"},{"location":"tutorial/#setup","text":"Login Create a service Create a feature","title":"# Setup"},{"location":"tutorial/#use-featuren","text":"Each service has a unique token. Use this token to get the feature information.","title":"# Use Featuren"},{"location":"tutorial/#get-feature","text":"Information Use the service token you created before to access the resource. However, you only will be access to get and update feature information. If you want full access to feature resource, see more details here . GET /features/{id}","title":"Get feature"},{"location":"tutorial/#request","text":"HTTP 1 2 GET /features/search-button HTTP / 1.1 Authorization : Token _Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg Curl 1 2 curl \"http://0.0.0.0:8000/features/search-button\" \\ -H 'Authorization: Token _Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg' Python 1 2 3 4 5 6 7 8 9 10 11 12 # Install the Python Requests library: # `pip install requests` import requests host = \"http://0.0.0.0:8000\" token = \"_Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg\" headers = { \"Authorization\" : f \"Token {token}\" } response = requests . get ( f \"{host}/features/search-button\" , headers = headers ) print ( response . json ())","title":"Request"},{"location":"tutorial/#response","text":"200 1 { \"id\" : \"search-button\" , \"version\" : \"1.0.0\" } 401 1 { \"message\" : \"Unauthorized\" } 403 1 { \"message\" : \"Access denied to resource\" } 404 1 { \"message\" : \"Feature not found\" }","title":"Response"},{"location":"tutorial/#update-feature","text":"Tip For more details about feature attributes see here. PUT /features/{id}","title":"Update feature"},{"location":"tutorial/#request_1","text":"HTTP 1 2 3 4 5 6 PUT /features/search-button HTTP / 1.1 Authorization : Token _Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg Content-Type : application/json; charset=utf-8 Host : 0.0.0.0:8000 { \"enabled\" : true , \"deny\" : false , \"version\" : \"1.0.0\" ] } Curl 1 2 3 4 5 6 7 8 curl -X \"PUT\" \"http://0.0.0.0:8000/features/search-button\" \\ -H 'Authorization: Token _Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"enabled\": true, \"deny\": false, \"version\": \"1.0.0\" }' Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Install the Python Requests library: # `pip install requests` import requests host = \"http://0.0.0.0:8000\" token = \"_Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg\" feature = { \"enabled\" : True , \"deny\" : False , \"version\" : \"1.0.1\" } headers = { \"Authorization\" : f \"Token {token}\" } response = requests . put ( f \"{host}/features/search-button\" , feature , headers = headers ) print ( response . json ())","title":"Request"},{"location":"tutorial/#response_1","text":"200 1 { \"message\" : \"Feature update successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 403 1 { \"message\" : \"Access denied to resource.\" } 404 1 { \"message\" : \"Feature not found.\" } You finished! Congratulations! If you have any questions or found a bug, please open an issue here","title":"Response"},{"location":"api/auth/","text":"Authentication # Login # POST /auth/login Use the credentials created before in Quickstart to login. Request # HTTP 1 2 3 4 5 POST /auth/login HTTP / 1.1 Content-Type : application/json; charset=utf-8 Host : 0.0.0.0:8000 { \"username\" : \"user\" , \"password\" : \"secret\" } Curl 1 2 3 4 5 6 curl -X \"POST\" \"http://0.0.0.0:8000/auth/login\" \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"username\": \"user\", \"password\": \"secret\" }' Python 1 2 3 4 5 6 7 8 9 10 11 # Install the Python Requests library: # `pip install requests` import requests host = \"http://0.0.0.0:8000\" user = { \"username\" : \"user\" , \"password\" : \"secret\" } response = requests . post ( f \"{host}/auth/login\" , user ) print ( response . json ()) Response # 200 1 { \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\" } 400 1 { \"message\" : \"Wrong credentials\" } Authorization header Every new request you will made is necessary add this 'token' on authorization header. Example # HTTP 1 2 GET /users/ HTTP / 1.1 Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9... Curl 1 2 curl \"http://0.0.0.0:8000/users/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Python 1 2 3 4 5 6 7 8 9 10 11 12 # Install the Python Requests library: # `pip install requests` import requests host = \"http://0.0.0.0:8000\" token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\" headers = { \"authorization\" : f \"Bearer {token}\" } response = requests . get ( f \"{host}/users/\" , headers = headers ) print ( response . json ()) Login data # Field Type Description name string Username. password string Password.","title":"Authentication"},{"location":"api/auth/#authentication","text":"","title":"Authentication"},{"location":"api/auth/#login","text":"POST /auth/login Use the credentials created before in Quickstart to login.","title":"Login"},{"location":"api/auth/#request","text":"HTTP 1 2 3 4 5 POST /auth/login HTTP / 1.1 Content-Type : application/json; charset=utf-8 Host : 0.0.0.0:8000 { \"username\" : \"user\" , \"password\" : \"secret\" } Curl 1 2 3 4 5 6 curl -X \"POST\" \"http://0.0.0.0:8000/auth/login\" \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"username\": \"user\", \"password\": \"secret\" }' Python 1 2 3 4 5 6 7 8 9 10 11 # Install the Python Requests library: # `pip install requests` import requests host = \"http://0.0.0.0:8000\" user = { \"username\" : \"user\" , \"password\" : \"secret\" } response = requests . post ( f \"{host}/auth/login\" , user ) print ( response . json ())","title":"Request"},{"location":"api/auth/#response","text":"200 1 { \"token\" : \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\" } 400 1 { \"message\" : \"Wrong credentials\" } Authorization header Every new request you will made is necessary add this 'token' on authorization header.","title":"Response"},{"location":"api/auth/#example","text":"HTTP 1 2 GET /users/ HTTP / 1.1 Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9... Curl 1 2 curl \"http://0.0.0.0:8000/users/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Python 1 2 3 4 5 6 7 8 9 10 11 12 # Install the Python Requests library: # `pip install requests` import requests host = \"http://0.0.0.0:8000\" token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\" headers = { \"authorization\" : f \"Bearer {token}\" } response = requests . get ( f \"{host}/users/\" , headers = headers ) print ( response . json ())","title":"Example"},{"location":"api/auth/#login-data","text":"Field Type Description name string Username. password string Password.","title":"Login data"},{"location":"api/features/","text":"Features # You must be authenticated to use this resource. Create a new feature # POST /features/ Request # 1 2 3 4 5 6 7 8 9 10 curl -X \"POST\" \"http://0.0.0.0:8000/features/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"id\": \"search-button\", \"enabled\": true, \"deny\": false, \"services\": [], \"version\": \"1.0.0\" }' Response # 201 1 { \"message\" : \"Feature created successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 409 1 { \"message\" : \"The feature id isn't available. Please try another.\" } Get all features # GET /features/ Request # 1 2 curl \"http://{host}/features/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Response # 200 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [ { \"id\" : \"search-button\" , \"version\" : \"1.0.0\" , \"enabled\" : true , \"deny\" : false , \"services\" : [] }, { \"id\" : \"footer\" , \"version\" : \"1.0.1\" , \"enabled\" : true , \"deny\" : false , \"services\" : [] }, ] 401 1 { \"message\" : \"Unauthorized.\" } Get feature by id # GET /features/{id} Request # 1 2 curl \"http://{host}/features/search-button\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Response # 200 1 2 3 4 5 6 7 { \"id\" : \"search-button\" , \"version\" : \"1.0.0\" , \"enabled\" : true , \"deny\" : false , \"services\" : [] } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Feature not found.\" } Update feature # PUT /features/{id} Request # 1 2 3 4 5 6 7 8 9 curl -X \"PUT\" \"http://0.0.0.0:8000/features/search-button\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"enabled\": true, \"deny\": false, \"services\": [1,2], \"version\": \"1.0.2\" }' Response # 200 1 { \"message\" : \"Feature update successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Feature not found.\" } Delete feature # DELETE /features/{id} Request # 1 2 curl \"http://0.0.0.0:8000/features/search-button\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Response # 200 1 { \"message\" : \"Feature deleted successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Feature not found.\" } Feature data # Field Type Description id String Feature name. version String Feature version. enabled Bool If value is true the feature can be used by all services. If value is false only services in services list can be use this feature. deny Bool If value is \u200btrue \u200bthe feature can be used by all services except the services in services list. services Array Services list.","title":"Features"},{"location":"api/features/#features","text":"You must be authenticated to use this resource.","title":"Features"},{"location":"api/features/#create-a-new-feature","text":"POST /features/","title":"Create a new feature"},{"location":"api/features/#request","text":"1 2 3 4 5 6 7 8 9 10 curl -X \"POST\" \"http://0.0.0.0:8000/features/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"id\": \"search-button\", \"enabled\": true, \"deny\": false, \"services\": [], \"version\": \"1.0.0\" }'","title":"Request"},{"location":"api/features/#response","text":"201 1 { \"message\" : \"Feature created successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 409 1 { \"message\" : \"The feature id isn't available. Please try another.\" }","title":"Response"},{"location":"api/features/#get-all-features","text":"GET /features/","title":"Get all features"},{"location":"api/features/#request_1","text":"1 2 curl \"http://{host}/features/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...'","title":"Request"},{"location":"api/features/#response_1","text":"200 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [ { \"id\" : \"search-button\" , \"version\" : \"1.0.0\" , \"enabled\" : true , \"deny\" : false , \"services\" : [] }, { \"id\" : \"footer\" , \"version\" : \"1.0.1\" , \"enabled\" : true , \"deny\" : false , \"services\" : [] }, ] 401 1 { \"message\" : \"Unauthorized.\" }","title":"Response"},{"location":"api/features/#get-feature-by-id","text":"GET /features/{id}","title":"Get feature by id"},{"location":"api/features/#request_2","text":"1 2 curl \"http://{host}/features/search-button\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...'","title":"Request"},{"location":"api/features/#response_2","text":"200 1 2 3 4 5 6 7 { \"id\" : \"search-button\" , \"version\" : \"1.0.0\" , \"enabled\" : true , \"deny\" : false , \"services\" : [] } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Feature not found.\" }","title":"Response"},{"location":"api/features/#update-feature","text":"PUT /features/{id}","title":"Update feature"},{"location":"api/features/#request_3","text":"1 2 3 4 5 6 7 8 9 curl -X \"PUT\" \"http://0.0.0.0:8000/features/search-button\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"enabled\": true, \"deny\": false, \"services\": [1,2], \"version\": \"1.0.2\" }'","title":"Request"},{"location":"api/features/#response_3","text":"200 1 { \"message\" : \"Feature update successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Feature not found.\" }","title":"Response"},{"location":"api/features/#delete-feature","text":"DELETE /features/{id}","title":"Delete feature"},{"location":"api/features/#request_4","text":"1 2 curl \"http://0.0.0.0:8000/features/search-button\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...'","title":"Request"},{"location":"api/features/#response_4","text":"200 1 { \"message\" : \"Feature deleted successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Feature not found.\" }","title":"Response"},{"location":"api/features/#feature-data","text":"Field Type Description id String Feature name. version String Feature version. enabled Bool If value is true the feature can be used by all services. If value is false only services in services list can be use this feature. deny Bool If value is \u200btrue \u200bthe feature can be used by all services except the services in services list. services Array Services list.","title":"Feature data"},{"location":"api/services/","text":"Services # You must be authenticated to use this resource. Create a new service # POST /services/ Request # 1 2 3 4 5 6 7 curl -X \"POST\" \"http://0.0.0.0:8000/services/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"name\": \"service-1\", \"description\": \"service description\" }' Response # 201 1 { \"message\" : \"Service created successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } Get all services # GET /services/ Request # 1 2 curl \"http://0.0.0.0:8000/services/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Response # 200 1 2 3 4 5 6 7 8 9 10 11 12 13 14 [ { \"id\" : 1 , \"name\" : \"Service-1\" , \"description\" : \"Service-1\" , \"token\" : \"_Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg\" }, { \"id\" : 2 , \"name\" : \"Service-2\" , \"description\" : \"Service-2\" , \"token\" : \"_wm-zTzCP4owZAIxsvT9jQ6h0mv3JZf-E_UR-LBXgQ\" } ] 401 1 { \"message\" : \"Unauthorized.\" } Get service by id # GET /service/{id} Request # 1 2 curl \"http://0.0.0.0:8000/services/1\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Response # 200 1 2 3 4 5 { \"id\" : 1 , \"name\" : \"service-1\" , \"description\" : \"service description\" , } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Service not found.\" } Update service # PUT /services/{id} Request # 1 2 3 4 5 6 7 curl -X \"PUT\" \"http://0.0.0.0:8000/services/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d $'{ \"name\": \"service-1\", \"description\": \"new service description\" }' Response # 200 1 { \"message\" : \"Service update successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Service not found.\" } Delete service # DELETE /services/{id} Request # 1 2 curl \"http://0.0.0.0:8000/services/1\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Response # 200 1 { \"message\" : \"Service deleted successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Service not found.\" } Service data # Field Type Description name String Service name. description String Service description.","title":"Services"},{"location":"api/services/#services","text":"You must be authenticated to use this resource.","title":"Services"},{"location":"api/services/#create-a-new-service","text":"POST /services/","title":"Create a new service"},{"location":"api/services/#request","text":"1 2 3 4 5 6 7 curl -X \"POST\" \"http://0.0.0.0:8000/services/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"name\": \"service-1\", \"description\": \"service description\" }'","title":"Request"},{"location":"api/services/#response","text":"201 1 { \"message\" : \"Service created successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" }","title":"Response"},{"location":"api/services/#get-all-services","text":"GET /services/","title":"Get all services"},{"location":"api/services/#request_1","text":"1 2 curl \"http://0.0.0.0:8000/services/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...'","title":"Request"},{"location":"api/services/#response_1","text":"200 1 2 3 4 5 6 7 8 9 10 11 12 13 14 [ { \"id\" : 1 , \"name\" : \"Service-1\" , \"description\" : \"Service-1\" , \"token\" : \"_Ld_k_26y7H-Ar9og6cEz54rkNZEDkW1BIrkgSAFFg\" }, { \"id\" : 2 , \"name\" : \"Service-2\" , \"description\" : \"Service-2\" , \"token\" : \"_wm-zTzCP4owZAIxsvT9jQ6h0mv3JZf-E_UR-LBXgQ\" } ] 401 1 { \"message\" : \"Unauthorized.\" }","title":"Response"},{"location":"api/services/#get-service-by-id","text":"GET /service/{id}","title":"Get service by id"},{"location":"api/services/#request_2","text":"1 2 curl \"http://0.0.0.0:8000/services/1\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...'","title":"Request"},{"location":"api/services/#response_2","text":"200 1 2 3 4 5 { \"id\" : 1 , \"name\" : \"service-1\" , \"description\" : \"service description\" , } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Service not found.\" }","title":"Response"},{"location":"api/services/#update-service","text":"PUT /services/{id}","title":"Update service"},{"location":"api/services/#request_3","text":"1 2 3 4 5 6 7 curl -X \"PUT\" \"http://0.0.0.0:8000/services/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d $'{ \"name\": \"service-1\", \"description\": \"new service description\" }'","title":"Request"},{"location":"api/services/#response_3","text":"200 1 { \"message\" : \"Service update successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Service not found.\" }","title":"Response"},{"location":"api/services/#delete-service","text":"DELETE /services/{id}","title":"Delete service"},{"location":"api/services/#request_4","text":"1 2 curl \"http://0.0.0.0:8000/services/1\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...'","title":"Request"},{"location":"api/services/#response_4","text":"200 1 { \"message\" : \"Service deleted successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"Service not found.\" }","title":"Response"},{"location":"api/services/#service-data","text":"Field Type Description name String Service name. description String Service description.","title":"Service data"},{"location":"api/users/","text":"Users # You must be authenticated to use this resource. Create a new user # POST /users/ Request # 1 2 3 4 5 6 7 curl -X \"POST\" \"http://0.0.0.0:8000/users/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"username\": \"user-1\", \"password\": \"secret\" }' Response # 201 1 { \"message\" : \"User created successfully\" } 401 1 { \"message\" : \"Unauthorized.\" } 409 1 { \"message\" : \"The username isn't available. Please try another.\" } Get all users # GET /users/ Request # 1 2 curl \"http://0.0.0.0:8000/users/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Response # 200 1 2 3 4 5 6 7 8 9 10 11 12 [ { \"id\" : 1 , \"username\" : \"user-1\" , \"admin\" : true , }, { \"id\" : 2 , \"username\" : \"user-2\" , \"admin\" : false , } ] 401 1 { \"message\" : \"Unauthorized.\" } Get user by id # GET /users/{id} Request # 1 2 curl \"http://0.0.0.0:8000/users/1\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Response # 200 1 2 3 4 5 { \"id\" : 1 , \"username\" : \"user-1\" , \"admin\" : true , } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"User not found\" } Update user # PUT /users/{id} Request # 1 2 3 4 5 6 7 curl -X \"PUT\" \"http://0.0.0.0:8000/users/1\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d $'{ \"username\": \"user\", \"password\": \"secret\" }' Response # 200 1 { \"message\" : \"User update successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"User not found.\" } 409 1 { \"message\" : \"The username isn't available. Please try another.\" } Delete user # DELETE /users/{id} Request # 1 2 curl \"http://0.0.0.0:8000/users/1\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' Response # 200 1 { \"message\" : \"User deleted successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"User not found.\" } User data # Field Type Description name String Username. password String Password.","title":"Users"},{"location":"api/users/#users","text":"You must be authenticated to use this resource.","title":"Users"},{"location":"api/users/#create-a-new-user","text":"POST /users/","title":"Create a new user"},{"location":"api/users/#request","text":"1 2 3 4 5 6 7 curl -X \"POST\" \"http://0.0.0.0:8000/users/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d '{ \"username\": \"user-1\", \"password\": \"secret\" }'","title":"Request"},{"location":"api/users/#response","text":"201 1 { \"message\" : \"User created successfully\" } 401 1 { \"message\" : \"Unauthorized.\" } 409 1 { \"message\" : \"The username isn't available. Please try another.\" }","title":"Response"},{"location":"api/users/#get-all-users","text":"GET /users/","title":"Get all users"},{"location":"api/users/#request_1","text":"1 2 curl \"http://0.0.0.0:8000/users/\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...'","title":"Request"},{"location":"api/users/#response_1","text":"200 1 2 3 4 5 6 7 8 9 10 11 12 [ { \"id\" : 1 , \"username\" : \"user-1\" , \"admin\" : true , }, { \"id\" : 2 , \"username\" : \"user-2\" , \"admin\" : false , } ] 401 1 { \"message\" : \"Unauthorized.\" }","title":"Response"},{"location":"api/users/#get-user-by-id","text":"GET /users/{id}","title":"Get user by id"},{"location":"api/users/#request_2","text":"1 2 curl \"http://0.0.0.0:8000/users/1\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...'","title":"Request"},{"location":"api/users/#response_2","text":"200 1 2 3 4 5 { \"id\" : 1 , \"username\" : \"user-1\" , \"admin\" : true , } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"User not found\" }","title":"Response"},{"location":"api/users/#update-user","text":"PUT /users/{id}","title":"Update user"},{"location":"api/users/#request_3","text":"1 2 3 4 5 6 7 curl -X \"PUT\" \"http://0.0.0.0:8000/users/1\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...' \\ -H 'Content-Type: application/json; charset=utf-8' \\ -d $'{ \"username\": \"user\", \"password\": \"secret\" }'","title":"Request"},{"location":"api/users/#response_3","text":"200 1 { \"message\" : \"User update successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"User not found.\" } 409 1 { \"message\" : \"The username isn't available. Please try another.\" }","title":"Response"},{"location":"api/users/#delete-user","text":"DELETE /users/{id}","title":"Delete user"},{"location":"api/users/#request_4","text":"1 2 curl \"http://0.0.0.0:8000/users/1\" \\ -H 'Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...'","title":"Request"},{"location":"api/users/#response_4","text":"200 1 { \"message\" : \"User deleted successfully.\" } 401 1 { \"message\" : \"Unauthorized.\" } 404 1 { \"message\" : \"User not found.\" }","title":"Response"},{"location":"api/users/#user-data","text":"Field Type Description name String Username. password String Password.","title":"User data"}]}